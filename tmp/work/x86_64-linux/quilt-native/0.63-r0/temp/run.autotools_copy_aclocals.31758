def autotools_copy_aclocals(d):
    s = d.getVar("S", True)
    if not os.path.exists(s + "/configure.in") and not os.path.exists(s + "/configure.ac"):
        if not d.getVar("AUTOTOOLS_COPYACLOCAL"):
            return

    taskdepdata = d.getVar("BB_TASKDEPDATA", False)
    #bb.warn(str(taskdepdata))
    pn = d.getVar("PN", True)
    aclocaldir = d.getVar("ACLOCALDIR", True)
    oe.path.remove(aclocaldir)
    bb.utils.mkdirhier(aclocaldir)
    start = None
    configuredeps = []

    for dep in taskdepdata:
        data = taskdepdata[dep]
        if data[1] == "do_configure" and data[0] == pn:
            start = dep
            break
    if start is None:
        bb.fatal("Couldn't find ourself in BB_TASKDEPDATA?")

    # We need to find configure tasks which are either from <target> -> <target>
    # or <native> -> <native> but not <target> -> <native> unless they're direct
    # dependencies. This mirrors what would get restored from sstate.
    done = [dep]
    next = [dep]
    while next:
        new = []
        for dep in next:
            data = taskdepdata[dep]
            for datadep in data[3]:
                if datadep in done:
                    continue
                done.append(datadep)
                if (not data[0].endswith("-native")) and taskdepdata[datadep][0].endswith("-native") and dep != start:
                    continue
                new.append(datadep)
                if taskdepdata[datadep][1] == "do_configure":
                    configuredeps.append(taskdepdata[datadep][0])
        next = new

    #configuredeps2 = []
    #for dep in taskdepdata:
    #    data = taskdepdata[dep]
    #    if data[1] == "do_configure" and data[0] != pn:
    #        configuredeps2.append(data[0])
    #configuredeps.sort()
    #configuredeps2.sort()
    #bb.warn(str(configuredeps))
    #bb.warn(str(configuredeps2))

    cp = []
    for c in configuredeps:
        if c.endswith("-native"):
            manifest = d.expand("/opt/yocto/poky/qemuarm/tmp/sstate-control/manifest-x86_64-%s.populate_sysroot" % c)
        elif c.startswith("nativesdk-"):
            manifest = d.expand("/opt/yocto/poky/qemuarm/tmp/sstate-control/manifest-x86_64_linux-%s.populate_sysroot" % c)
        elif "-cross-" in c or "-crosssdk" in c:
            continue
        else:
            manifest = d.expand("/opt/yocto/poky/qemuarm/tmp/sstate-control/manifest-qemuarm-%s.populate_sysroot" % c)
        try:
            f = open(manifest, "r")
            for l in f:
                if "/aclocal/" in l and l.strip().endswith(".m4"):
                    cp.append(l.strip())
        except:
            bb.warn("%s not found" % manifest)

    for c in cp:
        t = os.path.join(aclocaldir, os.path.basename(c))
        if not os.path.exists(t):
            os.symlink(c, t)

autotools_copy_aclocals(d)

